"1.138.0"
[{"check_id":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","path":"FS-Backend/src/index.js","start":{"line":10,"col":7,"offset":289},"end":{"line":10,"col":22,"offset":304},"extra":{"message":"A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.","metadata":{"category":"security","references":["https://www.npmjs.com/package/csurf","https://www.npmjs.com/package/csrf","https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"technology":["javascript","typescript","express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","shortlink":"https://sg.run/BxzR"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"problem-based-packs.insecure-transport.js-node.bypass-tls-verification.bypass-tls-verification","path":"FS-Backend/src/models/index.js","start":{"line":10,"col":40,"offset":251},"end":{"line":10,"col":84,"offset":295},"extra":{"message":"Checks for setting the environment variable NODE_TLS_REJECT_UNAUTHORIZED to 0, which disables TLS verification. This should only be used for debugging purposes. Setting the option rejectUnauthorized to false bypasses verification against the list of trusted CAs, which also leads to insecure transport. These options lead to vulnerability to MTM attacks, and should not be used.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","category":"security","cwe":"CWE-319: Cleartext Transmission of Sensitive Information","owasp":"A03:2017 - Sensitive Data Exposure","references":["https://nodejs.org/api/https.html#https_https_request_options_callback","https://stackoverflow.com/questions/20433287/node-js-request-cert-has-expired#answer-29397100"],"subcategory":["vuln"],"technology":["node.js"],"vulnerability":"Insecure Transport","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/problem-based-packs.insecure-transport.js-node.bypass-tls-verification.bypass-tls-verification","shortlink":"https://sg.run/9oxr"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"FS-Backend/src/models/index.js","start":{"line":31,"col":48,"offset":772},"end":{"line":31,"col":52,"offset":776},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash","path":"FS-Backend/src/routes/auth/index.js","start":{"line":11,"col":25,"offset":512},"end":{"line":11,"col":85,"offset":572},"extra":{"message":"bcrypt hash detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"category":"security","technology":["secrets","bcrypt"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash","shortlink":"https://sg.run/3A8G"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.injection.raw-html-format.raw-html-format","path":"FS-Backend/src/routes/auth/verifyEmail.js","start":{"line":36,"col":10,"offset":1274},"end":{"line":36,"col":70,"offset":1334},"extra":{"message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format","shortlink":"https://sg.run/5DO3"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.injection.raw-html-format.raw-html-format","path":"FS-Backend/src/routes/companies.js","start":{"line":29,"col":11,"offset":1113},"end":{"line":29,"col":151,"offset":1253},"extra":{"message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format","shortlink":"https://sg.run/5DO3"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"FS-Backend/src/routes/companies.js","start":{"line":53,"col":19,"offset":1796},"end":{"line":53,"col":26,"offset":1803},"extra":{"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.injection.raw-html-format.raw-html-format","path":"FS-Backend/src/routes/drivers.js","start":{"line":29,"col":11,"offset":1182},"end":{"line":29,"col":153,"offset":1324},"extra":{"message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format","shortlink":"https://sg.run/5DO3"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"FS-Backend/src/routes/drivers.js","start":{"line":60,"col":19,"offset":2082},"end":{"line":60,"col":25,"offset":2088},"extra":{"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"FS-Backend/src/routes/receipts.js","start":{"line":34,"col":19,"offset":1068},"end":{"line":34,"col":27,"offset":1076},"extra":{"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"FS-Backend/src/routes/stations.js","start":{"line":28,"col":19,"offset":947},"end":{"line":28,"col":27,"offset":955},"extra":{"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-generic-secret.detected-generic-secret","path":"FS-Backend/src/seeders/20250925175153-users.js","start":{"line":26,"col":16,"offset":732},"end":{"line":26,"col":58,"offset":774},"extra":{"message":"Generic Secret detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"source-rule-url":"https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json","category":"security","technology":["secrets"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret","shortlink":"https://sg.run/l2o5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-generic-secret.detected-generic-secret","path":"FS-Backend/src/seeders/20250925175153-users.js","start":{"line":44,"col":18,"offset":1326},"end":{"line":44,"col":60,"offset":1368},"extra":{"message":"Generic Secret detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"source-rule-url":"https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json","category":"security","technology":["secrets"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret","shortlink":"https://sg.run/l2o5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-generic-secret.detected-generic-secret","path":"FS-Backend/src/seeders/20250925175153-users.js","start":{"line":63,"col":18,"offset":1947},"end":{"line":63,"col":60,"offset":1989},"extra":{"message":"Generic Secret detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"source-rule-url":"https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json","category":"security","technology":["secrets"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret","shortlink":"https://sg.run/l2o5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","path":"FS-Backend/src/swagger.js","start":{"line":4,"col":7,"offset":80},"end":{"line":4,"col":22,"offset":95},"extra":{"message":"A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.","metadata":{"category":"security","references":["https://www.npmjs.com/package/csurf","https://www.npmjs.com/package/csrf","https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"technology":["javascript","typescript","express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","shortlink":"https://sg.run/BxzR"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}]
[]
{"scanned":["FS-Backend/.env.example","FS-Backend/.gitignore","FS-Backend/.prettierrc","FS-Backend/README.md","FS-Backend/docs/api.js","FS-Backend/docs/components/schemas.js","FS-Backend/docs/paths/auth.js","FS-Backend/docs/paths/companies.js","FS-Backend/docs/paths/drivers.js","FS-Backend/docs/paths/receipts.js","FS-Backend/docs/paths/stations.js","FS-Backend/docs/paths/vehicles.js","FS-Backend/docs/security.js","FS-Backend/package.json","FS-Backend/src/config/cookies.js","FS-Backend/src/config/db.js","FS-Backend/src/config/env.js","FS-Backend/src/config/nodemailer.js","FS-Backend/src/errors/httpErrors.js","FS-Backend/src/index.js","FS-Backend/src/middleware/authentication.js","FS-Backend/src/middleware/errorHandler.js","FS-Backend/src/models/company.js","FS-Backend/src/models/driver.js","FS-Backend/src/models/evstation.js","FS-Backend/src/models/index.js","FS-Backend/src/models/receipts.js","FS-Backend/src/models/user.js","FS-Backend/src/models/vehicle.js","FS-Backend/src/routes/auth/2fa.js","FS-Backend/src/routes/auth/index.js","FS-Backend/src/routes/auth/verifyEmail.js","FS-Backend/src/routes/companies.js","FS-Backend/src/routes/drivers.js","FS-Backend/src/routes/receipts.js","FS-Backend/src/routes/stations.js","FS-Backend/src/routes/users.js","FS-Backend/src/routes/vehicles.js","FS-Backend/src/seed.js","FS-Backend/src/seeders/20250925175136-drivers.js","FS-Backend/src/seeders/20250925175148-companies.js","FS-Backend/src/seeders/20250925175153-users.js","FS-Backend/src/seeders/20250925175205-vehicles.js","FS-Backend/src/seeders/20250926233745-evstations.js","FS-Backend/src/swagger.js","FS-Backend/src/utils/jwt.js","FS-Backend/src/utils/rateLimit.js","FS-Backend/src/utils/totp.js"]}
{"rules":[],"rules_parse_time":1.2487950325012207,"profiling_times":{"config_time":1.7370383739471436,"core_time":2.710540294647217,"ignores_time":0.0015075206756591797,"total_time":4.449649095535278},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":1.4889872074127197,"per_file_time":{"mean":0.010635622910090856,"std_dev":0.0005549824222453113},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9901253744591146,"rules_selected_ratio":0.024631088427826475,"rules_matched_ratio":0.024631088427826475},"targets":[],"total_bytes":0,"max_memory_bytes":1095027456}
"OSS"
[]
